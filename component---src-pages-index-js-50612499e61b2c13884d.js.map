{"version":3,"sources":["webpack:///./src/components/image.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["Image","react_default","a","createElement","gatsby_browser_entry","query","render","data","gatsby_image_default","fluid","placeholderImage","childImageSharp","_2011440971","IndexPage","Fragment","layout","seo","title","keywords","style","maxWidth","marginBottom","components_image","to","className","href","AccessAlarm_default","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","arrayOf","Header","siteTitle","background","margin","padding","color","textDecoration","Layout","header","paddingTop","react_fontawesome_index_es","icon","faHome","size","_755544856","node"],"mappings":"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","file":"component---src-pages-index-js-50612499e61b2c13884d.js","sourcesContent":["import React from \"react\"\r\nimport { StaticQuery, graphql } from \"gatsby\"\r\nimport Img from \"gatsby-image\"\r\n\r\n/*\r\n * This component is built using `gatsby-image` to automatically serve optimized\r\n * images with lazy loading and reduced file sizes. The image is loaded using a\r\n * `StaticQuery`, which allows us to load the image from directly within this\r\n * component, rather than having to pass the image data down from pages.\r\n *\r\n * For more information, see the docs:\r\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\r\n * - `StaticQuery`: https://gatsby.dev/staticquery\r\n */\r\n\r\nconst Image = () => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query {\r\n        placeholderImage: file(relativePath: { eq: \"gatsby-astronaut.png\" }) {\r\n          childImageSharp {\r\n            fluid(maxWidth: 300) {\r\n              ...GatsbyImageSharpFluid\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => <Img fluid={data.placeholderImage.childImageSharp.fluid} />}\r\n  />\r\n)\r\nexport default Image\r\n","import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport Image from \"../components/image\"\r\nimport SEO from \"../components/seo\"\r\nimport { faHome } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport AccessAlarmIcon from '@material-ui/icons/AccessAlarm';\r\nimport './index.css'\r\n\r\nconst IndexPage = () => (\r\n  <>\r\n    <Layout>\r\n      <SEO title=\"Home\" keywords={[`gatsby`, `application`, `react`]} />\r\n      <h1>Hi people</h1>\r\n      <p>Welcome to your new Gatsby site.</p>\r\n      <p>Now go build something great.</p>\r\n      <div style={{ maxWidth: `300px`, marginBottom: `1.45rem` }}>\r\n        <Image />\r\n      </div>\r\n      <Link to=\"/page-2/\">Go to page 2</Link>\r\n    </Layout> \r\n    <footer className=\"footer\">\r\n      <div className=\"row\">\r\n        <a href=\"https://www.gatsbyjs.org/docs/\" className=\"col\">\r\n          <p className=\"icon text\">\r\n            <AccessAlarmIcon/>\r\n          </p>\r\n          <p className=\"text\">Docs</p>\r\n          </a>\r\n          <a href=\"https://www.gatsbyjs.org/tutorial/\" className=\"col\">\r\n            <p className=\"icon text\">\r\n            <AccessAlarmIcon/>\r\n            </p>            \r\n            <p className=\"text\">Tutorial</p>\r\n          </a>\r\n          <a href=\"https://www.gatsbyjs.org/plugins/\" className=\"col\">\r\n          <p className=\"icon text\">\r\n            <AccessAlarmIcon/>\r\n          </p>\r\n          <p className=\"text\">plugins</p>\r\n          </a>\r\n          <a href=\"https://www.gatsbyjs.org/blog/\" className=\"col\">\r\n          <p className=\"icon text\">\r\n            <AccessAlarmIcon/>\r\n          </p>           \r\n          <p className=\"text\">Blog</p>\r\n          </a>\r\n          <a href=\"https://www.gatsbyjs.org/showcase/\" className=\"col\">\r\n          <p className=\"icon text\">\r\n            <AccessAlarmIcon/>\r\n          </p>\r\n          <p className=\"text\">Showcase</p>\r\n          </a>\r\n      </div>\r\n    </footer>\r\n  </>\r\n \r\n)\r\n\r\nexport default IndexPage\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Helmet from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction SEO({ description, lang, meta, keywords, title }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`,\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata.author,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n      ]\r\n        .concat(\r\n          keywords.length > 0\r\n            ? {\r\n                name: `keywords`,\r\n                content: keywords.join(`, `),\r\n              }\r\n            : []\r\n        )\r\n        .concat(meta)}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  keywords: [],\r\n  description: ``,\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.arrayOf(PropTypes.object),\r\n  keywords: PropTypes.arrayOf(PropTypes.string),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n","import { Link } from \"gatsby\"\r\nimport PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\n\r\nconst Header = ({ siteTitle }) => (\r\n  <header\r\n    style={{\r\n      background: `rebeccapurple`,\r\n      marginBottom: `1.45rem`,\r\n    }}\r\n  >\r\n    <div\r\n      style={{\r\n        margin: `0 auto`,\r\n        maxWidth: 960,\r\n        padding: `1.45rem 1.0875rem`,\r\n      }}\r\n    >\r\n      <h1 style={{ margin: 0 }}>\r\n        <Link\r\n          to=\"/\"\r\n          style={{\r\n            color: `white`,\r\n            textDecoration: `none`,\r\n          }}\r\n        >\r\n          {siteTitle}\r\n        </Link>\r\n      </h1>\r\n    </div>\r\n  </header>\r\n)\r\n\r\nHeader.propTypes = {\r\n  siteTitle: PropTypes.string,\r\n}\r\n\r\nHeader.defaultProps = {\r\n  siteTitle: ``,\r\n}\r\n\r\nexport default Header\r\n","/**\r\n * Layout component that queries for data\r\n * with Gatsby's StaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.org/docs/static-query/\r\n */\r\n\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { StaticQuery, graphql } from \"gatsby\"\r\nimport Header from \"./header\"\r\nimport { faHome } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport AccessAlarmIcon from '@material-ui/icons/AccessAlarm';\r\n\r\nimport 'typeface-roboto';\r\nimport \"./layout.css\"\r\n\r\n\r\nconst Layout = ({ children }) => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query SiteTitleQuery {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => (\r\n      <>\r\n        <Header siteTitle={data.site.siteMetadata.title} />\r\n        <div\r\n          style={{\r\n            margin: `0 auto`,\r\n            maxWidth: 960,\r\n            padding: `0px 1.0875rem 1.45rem`,\r\n            paddingTop: 0,\r\n          }}\r\n        > \r\n          <main>{children}</main>\r\n          <FontAwesomeIcon icon={faHome} size=\"6x\"/>;\r\n\r\n\r\n          {/* <footer className=\"footer\">\r\n\r\n            <div className=\"row\">\r\n              <a href=\"https://www.gatsbyjs.org/docs/\" className=\"col\">\r\n                <p className=\"icon text\">\r\n                 <AccessAlarmIcon/>\r\n                </p>\r\n                <p className=\"text\">Docs</p>\r\n               </a>\r\n               <a href=\"https://www.gatsbyjs.org/tutorial/\" className=\"col\">\r\n                 <p className=\"icon text\">\r\n                  <AccessAlarmIcon/>\r\n                 </p>            \r\n                 <p className=\"text\">Tutorial</p>\r\n               </a>\r\n               <a href=\"https://www.gatsbyjs.org/plugins/\" className=\"col\">\r\n                <p className=\"icon text\">\r\n                 <AccessAlarmIcon/>\r\n                </p>\r\n                <p className=\"text\">plugins</p>\r\n               </a>\r\n               <a href=\"https://www.gatsbyjs.org/blog/\" className=\"col\">\r\n                <p className=\"icon text\">\r\n                 <AccessAlarmIcon/>\r\n                </p>           \r\n                <p className=\"text\">Blog</p>\r\n               </a>\r\n               <a href=\"https://www.gatsbyjs.org/showcase/\" className=\"col\">\r\n                <p className=\"icon text\">\r\n                  <AccessAlarmIcon/>\r\n                </p>\r\n                <p className=\"text\">Showcase</p>\r\n               </a>\r\n            </div>\r\n          </footer> */}\r\n        </div>\r\n      </>\r\n    )}\r\n  />\r\n)\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n"],"sourceRoot":""}